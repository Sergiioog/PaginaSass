---
interface Props {
    height: number;
    width: number;
    backgroundRGBA: string;
    boxShadow1 ?: number;
    boxShadow2 ?: number;
    boxShadow3 ?: number;
    boxShadow4 ?: number;
    boxShadowRGBA ?: number;
    backdropFilter : number;
    borderRadius: number;
    borderPix : number;
    borderState ?: string;
    borderRGBA : string;
    imagen: string; 
    descripcion: any;
    altImagen : string;
}
const {height, width,backgroundRGBA, boxShadow1, boxShadow2,boxShadow3,boxShadow4,boxShadowRGBA, backdropFilter,
    borderRadius,borderPix, borderState,borderRGBA,descripcion,imagen, altImagen} = Astro.props;
---
<section>
    <figure id="figureFoto" style={{
        height: `${height}px`,
        width: `${width}px`,
        background: `${backgroundRGBA}`, // Cambiado de backgroundRGBA a background
        boxShadow: `${boxShadow1}px ${boxShadow2}px ${boxShadow3}px ${boxShadow4}px rgba(${boxShadowRGBA})`, // Ajustado el formato de la sombra
        borderRadius: `${borderRadius}px`,
        border: `${borderPix}px ${borderState || ''} ${borderRGBA}`, // Si no hay borderState, se usa una cadena vacÃ­a
        backdropFilter: `blur(${backdropFilter}px)`,
    
        boxShadow1 : `${boxShadow1}`,
        boxShadow2 : `${boxShadow2}`,
        boxShadow3 : `${boxShadow3}`,
        boxShadow4 : `${boxShadow4}`,
        boxShadowRGBA : `${boxShadowRGBA}`,  
        borderPix: `${borderPix}px`,
        borderState: `${borderState}`,
        borderRGBA: `${borderRGBA}`,
    }}>
        <img src={imagen} alt={altImagen}>
    </figure>
    <div id="divDesc">
        <p>{descripcion}</p>
    </div>
</section> 


<style lang="scss">
    section {
        max-width: 240px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    #figureFoto {
        padding: 15px;
        margin-bottom: 20px;
    }
    #figureFoto img {
        animation: cambioOpacidad 2s ease-in-out infinite;
    }
    #divDesc {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: left; /* Alinear el texto a la izquierda */
    padding: 2px;
    overflow: hidden;
    width: 100%; /* Asegurar que el contenedor ocupe todo el ancho disponible */
    animation: subirBajar 4s ease infinite;
}

    @keyframes subirBajar {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-3px);
    }
    }

    @keyframes cambioOpacidad {
        0% {
            opacity: 1; /* Opacidad completa */
        }
        50% {
            opacity: 0.5; /* Opacidad reducida */
        }
        100% {
            opacity: 1; /* Vuelve a la opacidad completa */
        }
    }



   
</style>